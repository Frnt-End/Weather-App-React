{"version":3,"sources":["img/moon.svg","img/sun.svg","index.js"],"names":["WeatherApp","useState","temperature","setTemperature","desc","setDesc","icon","city","setCity","tabState","setTabState","className","map","e","i","onClick","style","marginBottom","Date","toLocaleString","src","nightIcon","alt","height","width","dayIcon","axios","method","url","process","then","response","data","main","temp","weather","catch","error","console","log","getWeatherData","render","document","querySelector"],"mappings":"kNAAe,MAA0B,iCCA1B,MAA0B,gC,eCSnCA,EAAa,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,OAAjC,mBAAOK,EAAP,KACA,GADA,KACwBL,mBAAS,WAAjC,mBAAOM,EAAP,KAAaC,EAAb,KAEA,EAAgCP,mBAAS,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAuBA,OACE,qCACE,qBAAKC,UAAS,iBAAYJ,KAC1B,sBAAKI,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SAvBQ,CAAC,SAAU,QAAS,WAAY,UAwB7BC,KAAI,SAACC,EAAGC,GACf,OACE,wBAEEH,UACEF,IAAaK,EAAI,yBAA2B,cAE9CC,QAAS,WACPP,EAAQK,GAnCxBH,EAoC0BI,IAPd,SAUGD,GATIC,UAgBf,sBAAKH,UAAU,cAAf,UACE,oBAAGK,MAAO,CAAEC,aAAc,QAA1B,UACE,sBAAMN,UAAU,SAAhB,SACE,iCAASJ,MAEX,uBAAMI,UAAU,OAAhB,UAAuB,KAAE,IAAIO,MAAOC,uBAGtC,8BACY,QAATb,EACC,qBACEc,IAAKC,EACLV,UAAoB,QAATL,EAAiB,aAAe,eAC3CgB,IAAI,eACJC,OAAO,KACPC,MAAM,OAEG,QAATlB,EACF,qBACEc,IAAKK,EACLd,UAAoB,QAATL,EAAiB,WAAa,eACzCgB,IAAI,eACJC,OAAO,KACPC,MAAM,OAGR,qBACEJ,IAAG,4CAAuCd,EAAvC,WACHK,UAAU,eACVW,IAAI,mBAKV,oBAAGX,UAAU,OAAb,UACGT,EACD,+BACE,iCAAQ,YAIZ,mBAAGS,UAAU,OAAb,SAAqBP,UAlFN,SAACG,GACtBmB,IAAM,CACJC,OAAQ,MACRC,IAAI,qDAAD,OAAuDrB,EAAvD,+BAlBMsB,sCAoBRC,MAAK,SAACC,GAGL5B,EAAe4B,EAASC,KAAKC,KAAKC,MAClC7B,EAAQ0B,EAASC,KAAKG,QAAQ,GAAGF,SAElCG,OAAM,SAACC,GACNC,QAAQC,IAAIF,MA0EbG,CAAejC,OAKtBkC,iBAAO,cAAC,EAAD,IAAgBC,SAASC,cAAc,Y","file":"static/js/main.232b1fd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moon.b1772046.svg\";","export default __webpack_public_path__ + \"static/media/sun.90e72021.svg\";","import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport nightIcon from \"./img/moon.svg\";\r\nimport dayIcon from \"./img/sun.svg\";\r\nimport \"./style.css\";\r\n\r\nconst apikey = process.env.REACT_APP_API_KEY;\r\n\r\nconst WeatherApp = () => {\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"01d\");\r\n  const [city, setCity] = useState(\"Berlin\");\r\n\r\n  const [tabState, setTabState] = useState(0);\r\n  const toggleTab = (index) => {\r\n    setTabState(index);\r\n  };\r\n\r\n  const arrTabs = [\"Berlin\", \"Paris\", \"New York\", \"London\"];\r\n\r\n  const getWeatherData = (city) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${apikey}`,\r\n    })\r\n      .then((response) => {\r\n        // setCity(response.data.name);\r\n        // setIcon(response.data.weather[0].icon);\r\n        setTemperature(response.data.main.temp);\r\n        setDesc(response.data.weather[0].main);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`bg-img ${city}`}></div>\r\n      <div className=\"wrap-box\">\r\n        <div className=\"tabs-wrap\">\r\n          <div className=\"tabs\">\r\n            {arrTabs.map((e, i) => {\r\n              return (\r\n                <button\r\n                  key={i}\r\n                  className={\r\n                    tabState === i ? \"tabs button active-tab\" : \"tabs button\"\r\n                  }\r\n                  onClick={() => {\r\n                    setCity(e);\r\n                    toggleTab(i);\r\n                  }}\r\n                >\r\n                  {e}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"weather-box\">\r\n          <p style={{ marginBottom: \"30px\" }}>\r\n            <span className=\"header\">\r\n              <strong>{city}</strong>\r\n            </span>\r\n            <span className=\"date\"> {new Date().toLocaleString()}</span>\r\n          </p>\r\n\r\n          <div>\r\n            {icon === \"01n\" ? (\r\n              <img\r\n                src={nightIcon}\r\n                className={icon === \"01n\" ? \"night-time\" : \"weather-icon\"}\r\n                alt=\"weather-icon\"\r\n                height=\"55\"\r\n                width=\"55\"\r\n              />\r\n            ) : icon === \"01d\" ? (\r\n              <img\r\n                src={dayIcon}\r\n                className={icon === \"01d\" ? \"day-time\" : \"weather-icon\"}\r\n                alt=\"weather-icon\"\r\n                height=\"65\"\r\n                width=\"65\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                className=\"weather-icon\"\r\n                alt=\"weather-icon\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          <p className=\"temp\">\r\n            {temperature}\r\n            <span>\r\n              <strong>o </strong>\r\n            </span>\r\n          </p>\r\n\r\n          <p className=\"desc\">{desc}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {getWeatherData(city)}\r\n    </>\r\n  );\r\n};\r\n\r\nrender(<WeatherApp />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}