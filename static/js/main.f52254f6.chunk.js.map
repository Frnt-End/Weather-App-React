{"version":3,"sources":["img/moon.svg","img/sun.svg","index.js"],"names":["WeatherApp","useState","temperature","setTemperature","desc","setDesc","icon","setIcon","city","setCity","country","setCountry","tabState","setTabState","toggleTab","index","className","onClick","style","marginBottom","Date","toLocaleString","src","nightIcon","alt","height","width","dayIcon","axios","method","url","process","then","response","data","weather","Math","round","main","temp","name","sys","catch","error","console","log","getWeatherData","render","document","querySelector"],"mappings":"kNAAe,MAA0B,iCCA1B,MAA0B,gC,eCYnCA,EAAa,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,OAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,UAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA8BR,mBAAS,MAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KAEA,EAAgCV,mBAAS,GAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACMC,EAAY,SAACC,GACjBF,EAAYE,IAoDd,OACE,qCACA,qBAAKC,UAAS,iBAAYR,KACxB,qBAAKQ,UAAU,WAAf,SACE,sBAAKA,UAAU,cAAf,UACA,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACE,wBAAQA,UAAwB,IAAbJ,EAAiB,yBAA2B,cAAeK,QAvDtE,WAClBR,EAAQ,UACRE,EAAW,MACXG,EAAU,IAoDA,oBACA,wBAAQE,UAAwB,IAAbJ,EAAiB,yBAA2B,cAAeK,QAnDvE,WACjBR,EAAQ,SACRE,EAAW,MACXG,EAAU,IAgDA,mBACA,wBAAQE,UAAwB,IAAbJ,EAAiB,yBAA2B,cAAeK,QA/C1E,WACdR,EAAQ,YACRE,EAAW,MACXG,EAAU,IA4CA,sBACA,wBAAQE,UAAwB,IAAbJ,EAAiB,yBAA2B,cAAeK,QA3CtE,WAClBR,EAAQ,UACRE,EAAW,MACXG,EAAU,IAwCA,yBAIF,oBAAGI,MAAO,CAAEC,aAAc,QAA1B,UACE,sBAAMH,UAAU,SAAhB,SAAyB,iCAASR,MAClC,uBAAMQ,UAAU,OAAhB,gBAA0B,IAAII,MAAOC,uBAG3C,8BACa,QAATf,EAEA,qBAAKgB,IAAKC,EAAWP,UAAoB,QAATV,EAAiB,aAAe,eAAiBkB,IAAI,eAAeC,OAAO,KAAKC,MAAM,OAE7G,QAATpB,EAEA,qBAAKgB,IAAKK,EAASX,UAAoB,QAATV,EAAiB,WAAa,eAAiBkB,IAAI,eAAeC,OAAO,KAAKC,MAAM,OAElH,qBAAKJ,IAAG,4CAAwChB,EAAxC,WAAwDU,UAAU,eAAeQ,IAAI,mBAI7F,oBAAGR,UAAU,OAAb,UACHd,EACD,+BAAM,6CAIG,mBAAGc,UAAU,OAAb,SACIZ,SAhEI,SAACI,EAAME,GAC5BkB,IAAM,CACJC,OAAQ,MACRC,IAAI,qDAAD,OAAwDtB,EAAxD,YAAgEE,EAAhE,kBA1CMqB,sCA4CRC,MAAK,SAACC,GAEL1B,EAAQ0B,EAASC,KAAKC,QAAQ,GAAG7B,MAKjCH,EAAeiC,KAAKC,MAA2C,KAApCJ,EAASC,KAAKI,KAAKC,KAAO,SAAiB,KACtElC,EAAQ4B,EAASC,KAAKC,QAAQ,GAAGG,MACjC7B,EAAQwB,EAASC,KAAKM,MACtB7B,EAAWsB,EAASC,KAAKO,IAAI/B,YAE9BgC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAmDlBG,CAAetC,EAAME,OAQvBqC,iBAAO,cAAC,EAAD,IAAgBC,SAASC,cAAc,Y","file":"static/js/main.f52254f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moon.b1772046.svg\";","export default __webpack_public_path__ + \"static/media/sun.90e72021.svg\";","import React, { useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport axios from 'axios';\r\nimport nightIcon from './img/moon.svg';\r\nimport dayIcon from './img/sun.svg';\r\nimport './style.css';\r\n\r\n\r\n\r\nconst apikey = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nconst WeatherApp = () => {\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"01d\");\r\n  const [city, setCity] = useState(\"Berlin\");\r\n  const [country, setCountry] = useState(\"DE\");\r\n\r\n  const [tabState, setTabState] = useState(1);\r\n  const toggleTab = (index) => {\r\n    setTabState(index);\r\n}\r\n\r\n\r\n  const clickBerlin = () => {\r\n    setCity(\"Berlin\");\r\n    setCountry(\"DE\");\r\n    toggleTab(1);\r\n  }\r\n  const clickParis = () => {\r\n    setCity(\"Paris\");\r\n    setCountry(\"FR\");\r\n    toggleTab(2);\r\n  }\r\n  const clickNY = () => {\r\n    setCity(\"New York\");\r\n    setCountry(\"US\");\r\n    toggleTab(3);\r\n  }\r\n  const clickLondon = () => {\r\n    setCity(\"London\");\r\n    setCountry(\"GB\");\r\n    toggleTab(4);\r\n  }\r\n\r\n\r\n\r\n  const getWeatherData = (city, country) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url:  `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${apikey}`,\r\n    })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setIcon(response.data.weather[0].icon);\r\n        //setIcon(\"04n\");\r\n        // Kelvin to Fahrenheit\r\n        // setTemperature((response.data.main.temp - 273.15) * 1.8 + 32);\r\n        // Kelvin to Celsius\r\n        setTemperature(Math.round((response.data.main.temp - 273.15) * 100) / 100);\r\n        setDesc(response.data.weather[0].main);\r\n        setCity(response.data.name);\r\n        setCountry(response.data.sys.country);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className={`bg-img ${city}`}></div>\r\n      <div className=\"wrap-box\">\r\n        <div className=\"weather-box\">\r\n        <div className=\"tabs-wrap\">\r\n            <div className=\"tabs\">\r\n              <button className={tabState === 1 ? \"tabs button active-tab\" : \"tabs button\"} onClick={clickBerlin}>Berlin</button>\r\n              <button className={tabState === 2 ? \"tabs button active-tab\" : \"tabs button\"} onClick={clickParis}>Paris</button>\r\n              <button className={tabState === 3 ? \"tabs button active-tab\" : \"tabs button\"} onClick={clickNY}>New York</button>\r\n              <button className={tabState === 4 ? \"tabs button active-tab\" : \"tabs button\"} onClick={clickLondon}>London</button>\r\n            </div>\r\n          </div>\r\n\r\n            <p style={{ marginBottom: \"30px\" }}>\r\n              <span className=\"header\"><strong>{city}</strong></span>\r\n              <span className=\"date\">  {new Date().toLocaleString()}</span>\r\n            </p>\r\n\r\n        <div>\r\n          { icon === \"01n\"\r\n            ?\r\n            <img src={nightIcon} className={icon === \"01n\" ? \"night-time\" : \"weather-icon\" } alt=\"weather-icon\" height=\"55\" width=\"55\" />\r\n            :\r\n            icon === \"01d\"\r\n            ?\r\n            <img src={dayIcon} className={icon === \"01d\" ? \"day-time\" : \"weather-icon\" } alt=\"weather-icon\" height=\"65\" width=\"65\" />\r\n            :\r\n            <img src={ `https://openweathermap.org/img/wn/${icon}@2x.png` } className=\"weather-icon\" alt=\"weather-icon\" />\r\n          }\r\n        </div>\r\n\r\n            <p className=\"temp\">\r\n        {temperature}\r\n        <span><strong>o </strong></span>\r\n                </p>\r\n\r\n\r\n                 <p className=\"desc\">\r\n                    {desc}\r\n                  </p>\r\n        </div>\r\n\r\n</div>\r\n{ getWeatherData(city, country) }\r\n\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nrender(<WeatherApp />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}