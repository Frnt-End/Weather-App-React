{"version":3,"sources":["img/moon.svg","img/sun.svg","index.js"],"names":["WeatherApp","_useState","useState","_useState2","_slicedToArray","temperature","setTemperature","_useState3","_useState4","desc","setDesc","_useState5","_useState6","icon","_useState7","_useState8","city","setCity","_useState9","_useState10","tabState","setTabState","_jsxs","_Fragment","children","_jsx","className","concat","map","e","i","onClick","style","marginBottom","Date","toLocaleString","src","nightIcon","alt","height","width","dayIcon","axios","method","url","process","then","response","data","main","temp","weather","catch","error","console","log","getWeatherData","render","document","querySelector"],"mappings":"kNAAe,MAA0B,iCCA1B,MAA0B,gC,eCSnCA,EAAa,WACjB,IAAAC,EAAsCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,EAAwBL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAwBT,mBAAS,OAAMU,EAAAR,YAAAO,EAAA,GAAhCE,EAAID,EAAA,GACXE,GADoBF,EAAA,GACIV,mBAAS,WAASa,EAAAX,YAAAU,EAAA,GAAnCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEpBG,EAAgChB,mBAAS,GAAEiB,EAAAf,YAAAc,EAAA,GAApCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAuB5B,OACEG,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,OAAKC,UAAS,UAAAC,OAAYX,KAC1BS,cAAA,OAAKC,UAAU,WAAUF,SACvBF,eAAA,OAAKI,UAAU,cAAaF,SAAA,CAC1BC,cAAA,OAAKC,UAAU,YAAWF,SACxBC,cAAA,OAAKC,UAAU,OAAMF,SAxBf,CAAC,SAAU,QAAS,WAAY,UAyB3BI,KAAI,SAACC,EAAGC,GACf,OACEL,cAAA,UAEEC,UACEN,IAAaU,EAAI,yBAA2B,cAE9CC,QAAS,WACPd,EAAQY,GApC1BR,EAqC4BS,IACVN,SAEDK,GATIC,UAefR,eAAA,KAAGU,MAAO,CAAEC,aAAc,QAAST,SAAA,CACjCC,cAAA,QAAMC,UAAU,SAAQF,SACtBC,cAAA,UAAAD,SAASR,MAEXM,eAAA,QAAMI,UAAU,OAAMF,SAAA,CAAC,KAAE,IAAIU,MAAOC,uBAGtCV,cAAA,OAAAD,SACY,QAATX,EACCY,cAAA,OACEW,IAAKC,EACLX,UAAoB,QAATb,EAAiB,aAAe,eAC3CyB,IAAI,eACJC,OAAO,KACPC,MAAM,OAEG,QAAT3B,EACFY,cAAA,OACEW,IAAKK,EACLf,UAAoB,QAATb,EAAiB,WAAa,eACzCyB,IAAI,eACJC,OAAO,KACPC,MAAM,OAGRf,cAAA,OACEW,IAAG,qCAAAT,OAAuCd,EAAI,WAC9Ca,UAAU,eACVY,IAAI,mBAKVhB,eAAA,KAAGI,UAAU,OAAMF,SAAA,CAChBnB,EACDoB,cAAA,QAAAD,SACEC,cAAA,UAAAD,SAAQ,YAIZC,cAAA,KAAGC,UAAU,OAAMF,SAAEf,SAjFN,SAACO,GACtB0B,IAAM,CACJC,OAAQ,MACRC,IAAI,qDAADjB,OAAuDX,EAAI,wBAAAW,OAlBrDkB,sCAoBRC,MAAK,SAACC,GAGLzC,EAAeyC,EAASC,KAAKC,KAAKC,MAClCxC,EAAQqC,EAASC,KAAKG,QAAQ,GAAGF,SAElCG,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAyEbG,CAAexC,OAKtByC,iBAAOhC,cAACzB,EAAU,IAAK0D,SAASC,cAAc,Y","file":"static/js/main.62618d14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moon.b1772046.svg\";","export default __webpack_public_path__ + \"static/media/sun.90e72021.svg\";","import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport nightIcon from \"./img/moon.svg\";\r\nimport dayIcon from \"./img/sun.svg\";\r\nimport \"./style.css\";\r\n\r\nconst apikey = process.env.REACT_APP_API_KEY;\r\n\r\nconst WeatherApp = () => {\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"01d\");\r\n  const [city, setCity] = useState(\"Berlin\");\r\n\r\n  const [tabState, setTabState] = useState(0);\r\n  const toggleTab = (index) => {\r\n    setTabState(index);\r\n  };\r\n\r\n  const arrTabs = [\"Berlin\", \"Paris\", \"New York\", \"London\"];\r\n\r\n  const getWeatherData = (city) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${apikey}`,\r\n    })\r\n      .then((response) => {\r\n        // setCity(response.data.name);\r\n        // setIcon(response.data.weather[0].icon);\r\n        setTemperature(response.data.main.temp);\r\n        setDesc(response.data.weather[0].main);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`bg-img ${city}`}></div>\r\n      <div className=\"wrap-box\">\r\n        <div className=\"weather-box\">\r\n          <div className=\"tabs-wrap\">\r\n            <div className=\"tabs\">\r\n              {arrTabs.map((e, i) => {\r\n                return (\r\n                  <button\r\n                    key={i}\r\n                    className={\r\n                      tabState === i ? \"tabs button active-tab\" : \"tabs button\"\r\n                    }\r\n                    onClick={() => {\r\n                      setCity(e);\r\n                      toggleTab(i);\r\n                    }}\r\n                  >\r\n                    {e}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <p style={{ marginBottom: \"30px\" }}>\r\n            <span className=\"header\">\r\n              <strong>{city}</strong>\r\n            </span>\r\n            <span className=\"date\"> {new Date().toLocaleString()}</span>\r\n          </p>\r\n\r\n          <div>\r\n            {icon === \"01n\" ? (\r\n              <img\r\n                src={nightIcon}\r\n                className={icon === \"01n\" ? \"night-time\" : \"weather-icon\"}\r\n                alt=\"weather-icon\"\r\n                height=\"55\"\r\n                width=\"55\"\r\n              />\r\n            ) : icon === \"01d\" ? (\r\n              <img\r\n                src={dayIcon}\r\n                className={icon === \"01d\" ? \"day-time\" : \"weather-icon\"}\r\n                alt=\"weather-icon\"\r\n                height=\"65\"\r\n                width=\"65\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                className=\"weather-icon\"\r\n                alt=\"weather-icon\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          <p className=\"temp\">\r\n            {temperature}\r\n            <span>\r\n              <strong>o </strong>\r\n            </span>\r\n          </p>\r\n\r\n          <p className=\"desc\">{desc}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {getWeatherData(city)}\r\n    </>\r\n  );\r\n};\r\n\r\nrender(<WeatherApp />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}